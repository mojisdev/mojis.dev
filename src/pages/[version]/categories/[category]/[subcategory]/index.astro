---
import PageLayout from "../../../../../layouts/page-layout.astro";
import { client } from "../../../../../lib/client";

export async function getStaticPaths() {
  const { data: versions, error } = await client.GET("/api/v1/versions");

  if (error != null) {
    throw new Error(`failed to fetch versions: ${error}`);
  }

  const paths = [];

  const categoryPromises = versions.map(async (version) => {
    const { data, error } = await client.GET("/api/v1/categories/{version}", {
      params: {
        path: {
          version: version.emoji_version!,
        },
      },
    });

    if (error != null) {
      throw new Error(`failed to fetch emoji groups: ${error}`);
    }

    return [version.emoji_version, data] as const;
  });

  const categories = await Promise.all(categoryPromises);

  for (const [version, categoryGroup] of categories) {
    for (const group of categoryGroup) {
      for (const subgroup of group.subgroups) {
        paths.push({
          params: {
            version: version,
            category: group.slug,
            subcategory: subgroup,
          },
          props: {
            version: version,
            category: group,
            subgroup,
          },
        });
      }
    }
  }

  return paths;
}

const { version, category, subgroup } = Astro.props;
---

<PageLayout>
  <h1>Version: {version}</h1>
  <h2>Category: {JSON.stringify(category)}</h2>
  <h3>Subgroup: {JSON.stringify(subgroup)}</h3>
</PageLayout>
